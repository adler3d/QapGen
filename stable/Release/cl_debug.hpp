{"parse_ms":27082.5}
QapDebugMsg({"ok":false,"date":"2025.07.08 12:53:13"}@@@{"offset":14545}
{"line":0,"pos":14545}
"t_parent_fullname_reslove_algo_test_20250701{\r  //t_parent_holder{t_foo:i_base{}}\r  t_other{\r    //t_bar:t_parent_holder::i_base{}\r  }\r}\rt_using_test_20250628{\r  t_sep{\" \"}\r  using \" \" as t_sep;\r  t_foo;\r  t_foo{\r    t_bar{t_baz{}}\r    t_bar b;\r    \" \"\r    t_bar c?;\r    t_bar d?;\r    \" \"?\r  }\r  t_foo foo;\r}\rt_number{\r  string body=any(gen_dips(\"09\"));\r}\rtypedef array<char,2> ARRAY2char;\rtypedef array<char,4> ARRAY4char;\rt_str_item_raw:i_str_item{\r  string body=any(dip_inv(\"\\\"\\\\\\n\"));\r}\rt_str_item_hex:i_str_item{\r  \"\\\\x\"\r  ARRAY2char body=any_arr_char(gen_dips(\"09afAF\"));\r}\rt_str_item_num:i_str_item{\r  \"\\\\u\"\r  ARRAY2char body=any_arr_char(gen_dips(\"09\"));\r}\rt_str_item_fix:i_str_item{\r  \"\\\\\"\r  char body=any_char(\"tfbrn\\\\\\\"\\\'\"+gen_dips(\"07\"));\r}\rt_str_item{\r  t_impl{\r    \"\\\"\"\r    vector<TAutoPtr<i_str_item>> arr;\r    \"\\\"\"\r  }\r  string value=str<t_impl>();\r}\rt_char_item_raw:i_char_item{\r  string body=any(dip_inv(\"\'\\\\\\n\"));\r}\rt_char_item_hex:i_char_item{\r  \"\\\\x\"\r  ARRAY2char body=any_arr_char(gen_dips(\"09afAF\"));\r}\rt_char_item_num:i_char_item{\r  \"\\\\u\"\r  ARRAY4char body=any_arr_char(gen_dips(\"09\"));\r}\rt_char_item_fix:i_char_item{\r  \"\\\\\"\r  char body=any_char(\"tfbrn\\\\\\\"\\\'\"+gen_dips(\"07\"));\r}\rt_char_item{\r  t_impl{\r    \"\'\"\r    TAutoPtr<i_char_item> body;\r    \"\'\"\r  }\r  string value=str<t_impl>();\r}\rt_sep_seq:i_sep{\r  string body=any(\" \\t\\r\\n\");\r}\rt_c_comment:i_sep{\r  \"/*\"\r  string body=end(\"*/\");\r}\rt_cpp_comment:i_sep{\r  \"//\"\r  string body=any(dip_inv(\"\\n\"))?;\r}\rt_sep{\r  t_impl{\r    vector<TAutoPtr<i_sep>> arr;\r  }\r  string value=str<t_impl>();\r}\rt_name{\r  t_keyword{\r    string value=any_str_from_vec(split(\"new,delete,default,consteval,false,true,nullptr,this,struct,class,for,if,while,do,const,constexpr,else,operator,auto,continue,break,return,goto,virtual,override,public,private,protected,friend,template,typedef,using,namespace,decltype\",\",\"));\r  }\r  t_impl{\r    char A=any_char(gen_dips(\"azAZ\")+\"_$@\");\r    string B=any(gen_dips(\"azAZ09\")+\"_$@\")?;\r  }\r  t_impl_ex{\r    t_impl impl=minor<t_keyword>();\r  }\r  string value=str<t_impl_ex>();\r}\rt_str:i_simple_expr{\r  t_str_item body;\r}\rt_char:i_simple_expr{\r  t_char_item body;\r}\rt_num:i_simple_expr{\r  t_number body;\r}\rt_id:i_simple_expr{\r  t_name body;\r}\rt_sign:i_simple_expr{\r  char body=any_char(\"~|&=<>!:?;,.+-*/%^\");\r}\rt_cppcore{\rt_lev03{\r  string oper=any_str_from_vec(split(\"+,-,!,~\",\",\"))?;\r  TAutoPtr<i_expr> expr;\r}\rt_lev05{\r  t_oper{string value=any_str_from_vec(split(\"*,/,%\",\",\"));}\r  t_item{t_oper oper;t_lev03 expr;}\r  t_lev03 expr;\r  vector<t_item> arr?;\r}\rt_lev06{\r  t_oper{string value=any_str_from_vec(split(\"+,-\",\",\"));}\r  t_item{t_oper oper;t_lev05 expr;}\r  t_lev05 expr;\r  vector<t_item> arr?;\r}\rt_lev07{\r  t_oper{string value=any_str_from_vec(split(\"<<,>>\",\",\"));}\r  t_item{t_oper oper;t_lev06 expr;}\r  t_lev06 expr;\r  vector<t_item> arr?;\r}\rt_lev08{\r  t_oper{string value=any_str_from_vec(split(\"<,<=,>,>=\",\",\"));}\r  t_item{t_oper oper;t_lev07 expr;}\r  t_lev07 expr;\r  vector<t_item> arr?;\r}\rt_lev09{\r  t_oper{string value=any_str_from_vec(split(\"==,!=\",\",\"));}\r  t_item{t_oper oper;t_lev08 expr;}\r  t_lev08 expr;\r  vector<t_item> arr?;\r}\rt_lev10{\r  t_oper{\"&\" inline static const string value=\"&\";}\r  t_item{t_oper oper; t_lev09 expr;}\r  t_lev09 expr;\r  vector<t_item> arr?;\r}\rt_lev11{\r  t_oper{\"^\" inline static const string value=\"^\";}\r  t_item{t_oper oper; t_lev10 expr;}\r  t_lev10 expr;\r  vector<t_item> arr?;\r}\rt_lev12{\r  t_oper{\"|\" inline static const string value=\"|\";}\r  t_item{t_oper oper; t_lev11 expr;}\r  t_lev11 expr;\r  vector<t_item> arr?;\r}\rt_lev13{\r  t_oper{\"&&\" inline static const string value=\"&&\";}\r  t_item{t_oper oper; t_lev12 expr;}\r  t_lev12 expr;\r  vector<t_item> arr?;\r}\rt_lev14{\r  t_oper{\"||\" inline static const string value=\"||\";}\r  t_item{t_oper oper; t_lev13 expr;}\r  t_lev13 expr;\r  vector<t_item> arr?;\r}\r/*\rvar pad2=num=>(num<10?\"0\"+num:\"\"+num);\rreturn(\r`+,-,!,~\r*,/,%\r+,-\r<<,>>\r<,<=,>,>=\r==,!=\r&\r^\r|\r&&\r||`.split(\"\\r\").join(\"\").split(\"\\n\").map((ops,i)=>{\r  var e=\"t_lev\"+pad2(i==1?3:i+3);\r  var n=\"t_lev\"+pad2(i+4);\r  if(!i){\r    return `t_lev03{\r  string oper=any_str_from_vec(split(`+JSON.stringify(ops)+`,\",\"))?;\r  TAutoPtr<i_expr> expr;\r}`;\r  }\r  var oa=ops.split(\",\");\r  if(oa.length==1){\r    return n+`{\r  t_oper{\"`+oa[0]+`\" inline static const string value=\"`+oa[0]+`\";}\r  t_item{t_oper oper; `+e+` expr;}\r  `+e+` expr;\r  vector<t_item> arr?;\r}`;\r  }\r  return n+`{\r  t_oper{string value=any_str_from_vec(split(\"`+ops+`\",\",\"));}\r  t_item{t_oper oper;`+e+` expr;}\r  `+e+` expr;\r  vector<t_item> arr?;\r}`;\r}).join(\"\\n\"));\r*/\rt_string{\r  \"\\\"\"\r  string value=str<vector<TAutoPtr<i_str_item>>>()?;\r  \"\\\"\"\r}\rt_int_expr:i_expr{\r  t_zero:i_val{\"0\"}\r  t_num:i_val{\r    char first=any_char(gen_dips(\"19\"));\r    string num=any(gen_dips(\"09\"))?;\r  }\r  string value=str<TAutoPtr<i_val>>();\r}\rt_type_expr{\r  t_params{\r    \"{\"\r    string type=str<t_type_expr>();\r    \",\"\r    t_int_expr count;\r    \"}\"\r  }\r  t_elem{\r    t_name name;\r    TAutoPtr<t_params> params?;\r  }\r  t_item{\r    t_sep sep0?;\r    \"::\"\r    t_sep sep1?;\r    t_elem body;\r  }\r  t_elem first;\r  vector<t_item> arr?;\r}\rt_char_expr:i_expr{\r  t_char_item body;\r}\rt_bool_expr:i_expr{\r  string value=any_str_from_vec(split(\"true,false\",\",\"));\r}\rt_string_expr:i_expr{\r  t_string body;\r}\rt_real_expr:i_expr{\r  t_frac{\r    \".\"\r    string arr=any(gen_dips(\"09\"));\r  }\r  t_sign{\r    char sign=any_char(\"-+\");\r  }\r  t_exp{\r    char e=any_char(\"eE\");\r    TAutoPtr<t_sign> sign?;\r    string arr=any(gen_dips(\"09\"));\r  }\r  t_num:i_val{\r    char first=any_char(gen_dips(\"19\"));\r    string num=any(gen_dips(\"09\"))?;\r  }\r  t_zero:i_val{\"0\"}\r  t_impl{\r    TAutoPtr<i_val> val;\r    TAutoPtr<t_frac> frac;\r    TAutoPtr<t_exp> exp?;\r  }\r  string value=str<t_impl>();\r}\rt_call_param{\r  t_sep sep0?;\r  t_lev14 body;\r  t_sep sep1?;\r}\rt_call_params{\r  \"(\"\r  t_sep sep?;\r  vector<t_call_param> arr=vec(\",\")?;\r  \")\"\r}\rt_varcall_expr:i_expr{\r  t_sb_expr{\r    \"[\"\r    t_sep sep0?;\r    t_lev14 expr;\r    t_sep sep1?;\r    \"]\"\r  }\r  t_dd_part:i_part{\r    t_elem{\r      t_sep sep0?;\r      \"::\"\r      t_sep sep1?;\r      t_name name;\r    }\r    vector<t_elem> arr;\r  }\r  t_template_part:i_part{\r    \"<\"\r    t_sep sep0?;\r    vector<t_lev14> expr=vec(\",\");\r    t_sep sep1?;\r    \">\"\r    TAutoPtr<t_dd_part> ddp?;\r  }\r  t_arr{\r    t_sep sep?;\r    vector<t_sb_expr> arr;\r  }\r  t_item{\r    t_sep sepB?;\r    \".\"\r    t_sep sep0?;\r    t_name name;\r    t_arr arr?;\r  }\r  t_var{\r    t_name name;\r    t_sep sep0?;\r    TAutoPtr<i_part> tp?;\r    TAutoPtr<t_arr> arr?;\r    vector<t_item> items?;\r  }\r  t_var var;\r  t_sep sep?;\r  TAutoPtr<t_call_params> params?;\r}\rt_block_expr:i_expr{\r  \"(\"\r  t_lev14 body;\r  \")\"\r}\r/*\rt_call_expr:i_expr{\r  t_var_expr call;\r  t_sep sep?;\r  t_call_params params;\r}*/\r}\rusing \" \" as t_sep;\rt_test20250618_atrr{\r  t_foo{{}[::]}\r  t_foo foo; [skip]\r  t_sep sep; [optimize,\"sep\",(\"sep\"),sep[x]]\r}\r//t_test20250620_dev{\r//  t_foo{{}}\r//  t_bar{\r//    \"more tests\"\r//    \"test\"\r//    t_sep sep;\r//    \"another test\" /* yes ` \";\" */ ;\r//    t_foo foo?;\r//    \"nope\";\r//  }\r//  string dev=any(\";?\'->=<`()/\\\\+\")?;\r//  t_foo $dev0;\r//  t_bar $dev1;\r//  /*{\r//    go_any(dev,\";?\'->=<`()/\\\\+\");\r//    go_auto($dev0);\r//    go_auto($dev1);\r//  }*/\r//}\rt_meta_lexer{\rt_name_code:i_code{\r  string value=str<t_name::t_impl>();\r}\rt_num_code:i_code{\r  t_number body;\r}\rt_str_seq{\r  \"\\\"\"\r  vector<TAutoPtr<i_str_item>> arr?;\r  \"\\\"\"\r  }\rt_sep_str_seq{\r  \" \"\r  t_str_seq body;\r}\rt_str_code:i_code{\r  t_str_seq first;\r  vector<t_sep_str_seq> arr?;\r}\rt_char_code:i_code{\r  \"\'\"\r  TAutoPtr<i_char_item> body;\r  \"\'\"\r}\rt_sign_code:i_code{\r  t_sign body;\r}\rt_name_code_with_sep:i_code_with_sep{t_name_code body;t_sep sep?;}\rt_num_code_with_sep:i_code_with_sep{t_num_code body;t_sep sep?;}\rt_str_code_with_sep:i_code_with_sep{t_str_code body;t_sep sep?;}\rt_char_code_with_sep:i_code_with_sep{t_char_code body;t_sep sep?;}\rt_sign_code_with_sep:i_code_with_sep{t_sign_code body;t_sep sep?;}\rt_soft_brackets_code_with_sep:i_code_with_sep{\r  \"(\" \" \"? vector<TAutoPtr<i_code_with_sep>> body?; \")\" \" \"?\r}\rt_hard_brackets_code_with_sep:i_code_with_sep{\r  \"[\" \" \"? vector<TAutoPtr<i_code_with_sep>> body?; \"]\" \" \"?\r}\rt_curly_brackets_code_with_sep:i_code_with_sep{\r  \"{\" \" \"? vector<TAutoPtr<i_code_with_sep>> body?; \"}\" \" \"?\r}\r//real_source_data:\r/*\rt_name_code\rt_num_code\rt_str_code\rt_char_code\rt_sign_code\rt_soft_brackets_code\rt_hard_brackets_code\rt_curly_brackets_code\r@@@\r*/\r//real_source_code:\r/*\rvar mk=POST[\'data\'].split(\"@@@\")[1];\rvar gen=function(lex,mk){\r  if(lex.includes(\"brackets\")){\r    var json=JSON.stringify;\r    var m={soft:[\"(\",\")\"],hard:[\"[\",\"]\"],curly:[\"{\",\"}\"]}\r    for(var k in m)if(lex.includes(k))return [\r      lex+\"_with_sep:i_code_with_sep{\",\r      \"  \"+json(m[k][0])+\' \" \"? vector<TAutoPtr<i_code_with_sep>> body?; \'+json(m[k][1])+\' \" \"?\',\r      \"}\"\r    ].join(\"\\n\");\r  }\r  return lex+\"_with_sep:i_code_with_sep{\"+lex+\" body;t_sep sep?;}\";\r}\rvar out=[];\rvar arr=POST[\'data\'].split(\"\\n@@@\")[0].split(\"\\r\").join(\"\").split(\"\\n\");\rfor(var i=0;i<arr.length;i++){\r  out.push(gen(arr[i],mk));\r}\rreturn out.join(\"\\n\");\r*/\rt_code{\r  vector<TAutoPtr<i_code>> arr;\r}\rt_soft_brackets_code:i_code{\r  \"(\"\r  t_sep sep0?;\r  TAutoPtr<t_code> body?;\r  t_sep sep1?;\r  \")\"\r}\rt_hard_brackets_code:i_code{\r  \"[\"\r  t_sep sep0?;\r  TAutoPtr<t_code> body?;\r  t_sep sep1?;\r  \"]\"\r}\rt_curly_brackets_code:i_code{\r  \"{\"\r  t_sep sep0?;\r  TAutoPtr<t_code> body?;\r  t_sep sep1?;\r  \"}\"\r}\rt_semicolon{\r  \";\"\r}\rt_value_item{\r  string body=str<TAutoPtr<t_cppcore::i_expr>>();\r}\rt_value{\r  \" \"?\r  \"=\"\r  string body=str<TAutoPtr<t_cppcore::i_expr>>();\r}\rt_type_scope{\r  \"::\"\r}\rt_type_templ{\r  TAutoPtr<i_type_templ> body;\r}\rt_type_item_string:i_type_item{\r  t_str_item body;\r}\rt_type_item_char:i_type_item{\r  t_char_item body;\r}\rt_type_item_number:i_type_item{\r  t_number body;\r}\rt_type_item_type;\rt_scope_type_item{\r  t_type_scope scope;\r  TAutoPtr<t_type_item_type> body;\r}\rt_type_item_type:i_type_item {\r  TAutoPtr<t_type_scope> scope?;\r  t_name type;\r  TAutoPtr<t_type_templ> param?;\r  vector<t_scope_type_item> arr?;\r}\rt_type_expr2{\r  TAutoPtr<t_type_scope> scope?;\r  t_type_item_type body;\r}\rt_type_templ_param{\r  TAutoPtr<i_type_item> body;\r}\rt_sep_type_templ_param{\r  \",\"\r  t_type_templ_param body;\r}\rt_type_templ_params{\r  t_type_templ_param first;\r  vector<t_sep_type_templ_param> arr?;\r}\rt_type_templ_angle:i_type_templ{\r  \"<\"\r  TAutoPtr<t_type_templ_params> params?;\r  \">\"\r}\rt_type_templ_soft:i_type_templ{\r  \"(\"\r  TAutoPtr<t_type_templ_params> params?;\r  \")\"\r}\rt_struct_cmd_mode:i_struct_cmd_xxxx{\r  char body=any_char(\"DMO\");\r  \" \"?\r  \"+=\"\r  \" \"?\r}\rt_sep_value{\r  \" \"?\r  t_value_item value;\r  \" \"?\r}\rt_attr{\r  \"[\"\r  vector<t_sep_value> arr=vec(\",\")?;\r  \" \"?\r  \"]\"\r}\rt_sep_field:i_struct_field{\" \"?}\rt_semicolon_field:i_struct_field{TAutoPtr<t_semicolon> sc;}\rt_const_field:i_struct_field{\r  t_qst{\"?\"}\r  t_c_item:i_sc_item{t_char_item body;}\r  t_s_item:i_sc_item{t_str_item body;}\r  string value=str<TAutoPtr<i_sc_item>>();\r  \" \"?\r  TAutoPtr<t_qst> qst?;\r  \" \"?\r  TAutoPtr<t_semicolon> sc?;\r  \" \"?\r}\rt_struct_field_value {\r  \" \"?\r  \"=\";\r  \" \"?\r  TAutoPtr<t_cppcore::t_varcall_expr> expr;\r}\rt_qst{\r    string s=any(\"*?\");\r  }\rt_struct_field:i_struct_field{\r  TAutoPtr<t_cppcore::i_expr> type;\r  \" \"?\r  t_name name;\r  TAutoPtr<t_struct_field_value> value?;\r  \" \"?\r  TAutoPtr<t_qst> qst?;\r  \" \"?\r  \";\"\r  \" \"?\r  TAutoPtr<t_attr> attr?;\r  \" \"?\r}\rt_templ_params{\r  \"<\"\r  string body=str<TAutoPtr<t_type_templ_params>>();\r  \">\"\r}\rt_cmd_param;\rt_cmd_params{\r  vector<t_cmd_param> arr=vec(\",\");\r}\rt_cmd_param{\r  t_impl{\r    vector<TAutoPtr<i_cmd_param_expr>> arr=vec(\"+\");\r  }\r  t_expr_call:i_cmd_param_expr{\r    t_name func;\r    \"(\"\r    TAutoPtr<t_cmd_params> params;\r    \")\"\r  }\r  t_expr_str:i_cmd_param_expr{\r    string body=str<t_str_seq>();\r  }\r  t_expr_var:i_cmd_param_expr{\r    t_this{\"this->\"}\r    t_impl{\r      TAutoPtr<t_this> self?;\r      t_name name;\r    }\r    string body=str<t_impl>();\r  }\r  string body=str<t_impl>();\r}\rt_struct_cmd_anno:i_struct_cmd_xxxx{\r  string mode=any_str_from_vec(split(\"@mandatory,@optional,@mand,@opti,@man,@opt,@ma,@op,@m,@o,m,o\",\",\"));\r  \" \"\r}\rt_struct_cmd_suffix:i_struct_cmd_so{\r  char value=any_char(\"?!\");\r}\rt_struct_cmd_optional:i_struct_cmd_so{\r  \"[\"\r  string value=any_str_from_vec(split(\"optional,mandatory\",\",\"));\r  \"]\"\r}\rt_struct_cmd_opt_v2:i_struct_cmd_so{\r  \";\"\r  \" \"?\r  string value=any_str_from_vec(split(\"optional,mandatory\",\",\"));\r}\rt_struct_cmd{\r  TAutoPtr<i_struct_cmd_xxxx> mode?;\r  t_name func;\r  \" \"?\r  string templ_params=str<TAutoPtr<t_templ_params>>()?;\r  \"(\"\r  t_cmd_params params;\r  \")\"\r  \" \"?\r  TAutoPtr<i_struct_cmd_so> cmdso?;\r  \" \"?\r  \";\"\r}\rt_sep_struct_cmd{\r  \" \"?\r  t_struct_cmd body;\r}\rt_struct_cmds{\r  \"{\"\r  vector<t_sep_struct_cmd> arr?;\r  \" \"?\r  \"}\"\r}\rt_sep_struct_cmds{\r  \" \"?\r  t_struct_cmds body;\r}\rt_cpp_code_sep:i_cpp_code{\r  t_sep sep;\r}\rt_cpp_code_main:i_cpp_code{\r  TAutoPtr<i_code_with_sep> body;\r}\rt_cpp_code{\r  t_bayan{\"[::]\"}\r  t_fields:i_major{t_struct_field f;}\r  t_cmds:i_major{t_struct_cmds c;}\r  t_atr:i_major{TAutoPtr<t_attr> attr;}\r  t_eater{vector<TAutoPtr<i_cpp_code>> arr;}\r  t_with_bayan:i_bayan{\r    t_bayan bayan;\r    t_eater eater?;\r  }\r  t_minor_eater{t_eater eater=minor<TAutoPtr<i_major>>();}\r  t_without_bayan:i_bayan{\r    t_minor_eater eater=minor<t_with_bayan>();\r  }\r  \" \"?\r  TAutoPtr<i_bayan> bayan;\r}\rt_target_struct:i_target_item{\r  t_keyword{string kw=any_str_from_vec(split(\"struct,class\",\",\"));\" \"?}\r  t_body_semicolon:i_struct_impl{\";\"}\r  t_body_impl:i_struct_impl{\r    \"{\"\r    vector<TAutoPtr<i_target_item>> nested?;\r    \" \"?\r    vector<TAutoPtr<i_struct_field>> arr?;\r    \" \"?\r    TAutoPtr<t_struct_cmds> cmds?;\r    \" \"?\r    TAutoPtr<t_cpp_code> c?;\r    \" \"?\r    \"}\"\r  }\r  t_parent{\r    string arrow_or_colon=any_str_from_vec(split(\"=>,:\",\",\"));\r    \" \"?\r    t_name parent;\r  }\r  TAutoPtr<t_keyword> kw?;\r  t_name name;\r  \" \"?\r  TAutoPtr<t_parent> parent?;\r  \" \"?\r  TAutoPtr<i_struct_impl> body;\r}\rt_target_semicolon:i_target_item{vector<t_semicolon> arr;}\rt_target_sep:i_target_item{t_sep sep;}\rt_target_using:i_target_item{\r  t_str_ap:i_qa{\r    \"\'\"\r    string body=str<TAutoPtr<i_char_item>>();\r    \"\'\"\r  }\r  t_str_qu:i_qa{\r    \"\\\"\"\r    string body=str<vector<TAutoPtr<i_str_item>>>();\r    \"\\\"\"\r  }\r  \"using\"\r  \" \"\r  string s=str<TAutoPtr<i_qa>>();\r  \" \"\r  \"as\"\r  \" \"\r  string lexer=str<t_name>();\r  \" \"?\r  \";\"\r}\rt_target_typedef:i_target_item{\r  \"typedef\"\r  \" \"\r  t_cppcore::t_varcall_expr::t_var type;\r  \" \"?\r  t_name name;\r  \" \"?\r  \";\"\r}\rt_target{\r  vector<TAutoPtr<i_target_item>> arr;\r}\r}\r//" EOD
^)c:\users\adler\desktop\qapgen\qapgen\stable\qapgen\visitor_gen.h1535t_templ_sys_v05::main
{"parse_ms":27082.5,"total_ms":27322.4,"lexers":0,"fields":0,"g_unique_pool_ptr_counter":149}
